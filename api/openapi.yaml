openapi: 3.0.0
info:
  contact:
    email: johnfg2610"gmail.com
    name: John Gray
    url: https://github.com/Cabista/API/issues
  title: VehicleService
  version: "1.0"
servers:
- url: /
paths:
  /vehicle/{ID}:
    get:
      description: Gets a vehicle by id
      operationId: get-vehicle
      parameters:
      - explode: false
        in: path
        name: ID
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: businessID
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleForm'
          application/xml:
            schema:
              properties: {}
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - openIDOne: []
      summary: Get vehicle by id
      tags: []
  /vehicle/new:
    post:
      description: Creates a new Vehicle on the resource
      operationId: post-vehicle-new
      parameters:
      - description: |
          The business this vehicle belongs too
        explode: true
        in: query
        name: businessID
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleForm'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: Created
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - openIDOne: []
      summary: Create new vehicle
  /vehicle/all:
    get:
      operationId: get-vehicle-all
      parameters:
      - explode: true
        in: query
        name: businessID
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              properties: {}
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Vehicle'
                type: array
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - openIDOne: []
      summary: Your GET endpoint
      tags: []
components:
  schemas:
    VehicleInformation:
      description: The information relevant to this specific vehicle
      example:
        yearOfManufacture: 1
        color: color
        model: model
        registration: registration
        CO2Emissions: 5.637376656633329
        make: make
        passengerSize: 5
      properties:
        make:
          type: string
        model:
          type: string
        color:
          type: string
        yearOfManufacture:
          type: integer
        passengerSize:
          type: integer
        CO2Emissions:
          type: number
        registration:
          type: string
      title: VehicleInformation
      type: object
    Vehicle:
      description: Represents a vehicle
      example:
        vehicleExpiry:
          roadTaxExpiry: roadTaxExpiry
          plateExpiry: plateExpiry
          MOTExpiry: MOTExpiry
          insuranceExpiry: insuranceExpiry
        driverID: driverID
        vehicleInformation:
          yearOfManufacture: 0
          color: color
          passengerCount: passengerCount
          model: model
          id: id
          CO2Emissions: CO2Emissions
          make: make
        businessID: businessID
        id: id
        millage: 1
        plateNumber: 6.027456183070403
        creationDate: 2000-01-23
        isActive: true
      properties:
        id:
          type: string
        vehicleInformation:
          $ref: '#/components/schemas/VehicleType'
        plateNumber:
          type: number
        millage:
          type: integer
        vehicleExpiry:
          $ref: '#/components/schemas/VehicleExpiry'
        businessID:
          type: string
        creationDate:
          format: date
          type: string
        driverID:
          type: string
        isActive:
          type: boolean
      title: Vehicle
      type: object
      x-examples: {}
    VehicleType:
      example:
        yearOfManufacture: 0
        color: color
        passengerCount: passengerCount
        model: model
        id: id
        CO2Emissions: CO2Emissions
        make: make
      properties:
        id:
          type: string
        make:
          type: string
        model:
          type: string
        color:
          type: string
        yearOfManufacture:
          type: integer
        passengerCount:
          type: string
        CO2Emissions:
          description: CO2Emissions per gram per mile
          type: string
      title: VehicleType
      type: object
    VehicleForm:
      description: Represents a vehicle about to be created
      example:
        vehicleExpiry:
          roadTaxExpiry: roadTaxExpiry
          plateExpiry: plateExpiry
          MOTExpiry: MOTExpiry
          insuranceExpiry: insuranceExpiry
        driverID: driverID
        vehicleInformation:
          yearOfManufacture: 1
          color: color
          model: model
          registration: registration
          CO2Emissions: 5.637376656633329
          make: make
          passengerSize: 5
        millage: 6
        plateNumber: 0
        creationDate: 2000-01-23
      properties:
        plateNumber:
          type: integer
        millage:
          type: integer
        vehicleExpiry:
          $ref: '#/components/schemas/VehicleExpiry'
        creationDate:
          format: date
          type: string
        vehicleInformation:
          $ref: '#/components/schemas/VehicleInformation'
        driverID:
          type: string
      title: VehicleForm
      type: object
    VehicleExpiry:
      example:
        roadTaxExpiry: roadTaxExpiry
        plateExpiry: plateExpiry
        MOTExpiry: MOTExpiry
        insuranceExpiry: insuranceExpiry
      properties:
        MOTExpiry:
          type: string
        plateExpiry:
          type: string
        insuranceExpiry:
          type: string
        roadTaxExpiry:
          type: string
      title: VehicleExpiry
      type: object
  securitySchemes:
    openIDOne:
      openIdConnectUrl: localhost:9000
      type: openIdConnect
